//common
$color: #333;
$initfz: 14px;

body,div,dl,dt,dd,ul,ol,li,h1,h2,h3,h4,h5,form,fieldset,p,button,pre{margin:0;padding:0;font-size: $initfz;color: $color;font-family: $ff;line-height: 150%;font-weight:300;}
td,th{padding: 0;font-family: $ff;font-size: $initfz;color: $color;font-weight: 300;}
input,select,button,textarea{padding: 0;border: 1px solid #ddd;font-family: $ff;font-size: $initfz;font-weight: 300;}
pre{white-space: pre-line;font-family: $ff;}
a, span {color: inherit;font-size: inherit;font-weight: inherit;line-height: inherit;text-decoration: none;}
button {background: none;border: none;vertical-align: top;cursor: pointer;}
button::-moz-focus-inner {padding: 0;border: 0;}

/* float */
$float: 'fl' left, 'fr' right;
@each $name, $val in $float {
  .#{$name} {
    float: $val;
  }
}
.cb:after {
  content: '';
  display: block;
  clear: both;
}

$breakpoints:(
  'd1420':(max-width:1420px),
  'd1000':(max-width:1240px),
  'd720':(max-width:991px),
  'd594':(max-width:767px),
  'd326':(max-width:620px),
) !default;

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
}

.container {
  width: 1200px;
	margin: 0 auto;
  @include respond-to('d1000') {
    width: 90%;
  }
}

//
h1 {
  padding: 5px 0;
  font-size: 20px;
  font-weight: bold;
}

.code_review_box {
  padding: 10px;
  border-left: 5px solid #000;
  background-color: #f9f9f9;
  > pre {
    > span {
      font-weight: bold;
    }
    > i {
      display: inline-block;
      padding: 1px 5px;
      border-radius: 5px;
      color: #eb5757;
      font-weight: 500;
      background-color: #fff;
    }
  }
}
